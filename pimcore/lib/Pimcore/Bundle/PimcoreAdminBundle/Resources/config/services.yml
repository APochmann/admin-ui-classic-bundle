services:
    #
    # SESSION
    #

    pimcore_admin.session.storage_factory:
        class: Pimcore\Bundle\PimcoreAdminBundle\Session\AdminSessionStorageFactory

    pimcore_admin.session.storage:
        class: Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage
        factory: 'pimcore_admin.session.storage_factory:createStorage'

    pimcore_admin.session.configurator.admin_session_bags:
        class: Pimcore\Bundle\PimcoreAdminBundle\Session\AdminSessionBagConfigurator

    pimcore_admin.session:
        class: Symfony\Component\HttpFoundation\Session\Session
        configurator: ['@pimcore_admin.session.configurator.admin_session_bags', 'configure']
        arguments: ['@pimcore_admin.session.storage']

    #
    # SERIALIZER
    #
    # We use an isolated serializer instance in the admin area to make sure the admin doesn't break when the global
    # serializer is used and configured in client applications. For example, we don't want to use most of the normalizers
    # which are preconfigured as we basically only need json_encode with error handling and reference loop detection.
    #
    # This allows to use the power and flexibility of the serializer component in both admin and website contexts
    # without influencing each other.
    #

    pimcore_admin.serializer:
        class: Symfony\Component\Serializer\Serializer
        arguments: ['@?', '@?']

    pimcore_admin.serializer.encoder.json:
        class: Symfony\Component\Serializer\Encoder\JsonEncoder
        tags:
            -  { name: pimcore_admin.serializer.encoder }

    pimcore_admin.serializer.normalizer.reference_loop:
        class: Pimcore\Bundle\PimcoreAdminBundle\Serializer\Normalizer\ReferenceLoopNormalizer
        tags:
            -  { name: pimcore_admin.serializer.normalizer }

    #
    # SECURITY
    #

    pimcore_admin.security.admin_authenticator:
        class: Pimcore\Bundle\PimcoreAdminBundle\Security\Guard\AdminAuthenticator
        arguments:
            - '@security.token_storage'
            - '@router'
            - '@event_dispatcher'
            - '@security.http_utils'
            - '@pimcore_admin.security.bruteforce_protection_handler'

        calls:
            - [setLogger, ['@logger']]
        tags:
            - { name: monolog.logger, channel: security }

    pimcore_admin.security.webservice_authenticator:
        class: Pimcore\Bundle\PimcoreAdminBundle\Security\Guard\WebserviceAuthenticator
        calls:
            - [setLogger, ['@logger']]
        tags:
            - { name: monolog.logger, channel: security }

    pimcore_admin.security.logout_success_handler:
        class: Pimcore\Bundle\PimcoreAdminBundle\Security\LogoutSuccessHandler
        arguments: ['@security.token_storage', '@router', '@event_dispatcher']
        calls:
            - [setLogger, ['@logger']]
        tags:
            - { name: monolog.logger, channel: security }

    pimcore_admin.security.token_storage_user_resolver:
        class: Pimcore\Bundle\PimcoreAdminBundle\Security\User\TokenStorageUserResolver
        arguments: ['@service_container']

    pimcore_admin.security.user_loader:
        class: Pimcore\Bundle\PimcoreAdminBundle\Security\User\UserLoader
        arguments: ['@pimcore_admin.security.token_storage_user_resolver', '@pimcore.http.request_helper']

    pimcore_admin.security.bruteforce_protection_handler:
        class: Pimcore\Bundle\PimcoreAdminBundle\Security\BruteforceProtectionHandler
        arguments: ['@pimcore.http.request_helper']
        calls:
            - [setLogger, ['@logger']]
        tags:
            - { name: monolog.logger, channel: security }

    # the services below are only needed to use the build-in http auth for webdav - not fully working yet!
    pimcore_admin.security.user_provider:
        class: Pimcore\Bundle\PimcoreAdminBundle\Security\User\UserProvider

    # decorate the symfony encoder factory with our own
    # this allows us to use our password encoder including the user context
    # for pimcore users
    pimcore_admin.security.encoder_factory:
        class: Pimcore\Bundle\PimcoreAdminBundle\Security\Encoder\EncoderFactory
        decorates: security.encoder_factory
        arguments: ['@pimcore_admin.security.encoder_factory.inner']
        public: false

    #
    # API
    #

    pimcore_admin.webservice.service:
        class: Pimcore\Model\Webservice\Service
